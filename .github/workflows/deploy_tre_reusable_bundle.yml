---
name: Reusable - Deploy Azure TRE (Bundle)

on: # yamllint disable-line rule:truthy
  workflow_call:
    inputs:
      bundleDir:
        description: e.g. ./templates/stable/workspaces/base
        type: string
      bundleType:
        type: string
        description: workspace, workspace_service, user_resource, shared_service
      workspaceName:
        type: string
        description: Required if Bundle Type is user_resource
        default: "tre-service-guacamole"
      prRef:
        description: The git ref to checkout
        type: string
        required: false
      prHeadSha:
        description: >-
          For PR builds where GITHUB_REF isn't set to the PR (e.g. comment trigger),
          pass the PR's head SHA commit here
        type: string
        required: false
      ciGitRef:
        description: The git ref to use in annotations to associate a deployment with the code that triggered it
        type: string
        required: true
      e2eTestsCustomSelector:
        description: The pytest marker selector for the e2e tests to be run
        type: string
        default: ""
        required: false
      environmentName:
        description: The name of the Github Action's environment this will deploy into
        type: string
        required: true
      E2E_TESTS_NUMBER_PROCESSES:
        description: ""
        type: number
        required: false
      DEVCONTAINER_TAG:
        description: ""
        type: string
        required: true
    secrets:
      AAD_TENANT_ID:
        description: ""
        required: true
      ACR_NAME:
        description: ""
        required: true
      API_CLIENT_ID:
        description: ""
        required: true
      API_CLIENT_SECRET:
        description: ""
        required: true
      APPLICATION_ADMIN_CLIENT_ID:
        description: ""
        required: true
      APPLICATION_ADMIN_CLIENT_SECRET:
        description: ""
        required: true
      MGMT_RESOURCE_GROUP_NAME:
        description: ""
        required: true
      MS_TEAMS_WEBHOOK_URI:
        description: ""
        required: true
      MGMT_STORAGE_ACCOUNT_NAME:
        description: ""
        required: true
      SWAGGER_UI_CLIENT_ID:
        description: ""
        required: true
      TEST_APP_ID:
        description: ""
        required: true
      TEST_WORKSPACE_APP_ID:
        description: ""
        required: true
      TEST_WORKSPACE_APP_SECRET:
        description: ""
        required: true
      TEST_ACCOUNT_CLIENT_ID:
        description: ""
        required: true
      TEST_ACCOUNT_CLIENT_SECRET:
        description: ""
        required: true
      TRE_ID:
        description: ""
        required: true
      CI_CACHE_ACR_NAME:
        description: ""
        required: false
      AZURE_CREDENTIALS:
        description: ""
        required: true

# This will prevent multiple runs of this entire workflow.
# We should NOT cancel in progress runs as that can destabilize the environment.
concurrency: "deploy-bundle-${{ inputs.ciGitRef }}"

jobs:
  deploy_management:
    name: Deploy Management
    runs-on: ubuntu-latest
    environment: ${{ inputs.environmentName }}
    steps:
      - name: Show inputs
        run: |
          echo "Inputs"
          echo "======"
          echo "prRef         : ${{ inputs.prRef }}"
          echo "prRHeadSha    : ${{ inputs.prHeadSha }}"
          echo "ciGitRef      : ${{ inputs.ciGitRef }}"
          echo "environment   : ${{ inputs.environmentName }}"
          echo "bundleType    : ${{ inputs.bundleType }}"
          echo "bundleDir     : ${{ inputs.bundleDir }}"
          echo "workspaceName : ${{ inputs.workspaceName }}"

      - name: Check required values
        id: check_required_values
        # since this is a resuable workflow, required=true secrets will always have a value but it can be empty.
        run: |
          if [ "${{ secrets.AAD_TENANT_ID }}" == '' ]; then
            echo "Missing secret: AAD_TENANT_ID" && exit 1
          fi
          if [ "${{ secrets.ACR_NAME }}" == '' ]; then
            echo "Missing secret: ACR_NAME" && exit 1
          fi
          if [ "${{ secrets.API_CLIENT_ID }}" == '' ]; then
            echo "Missing secret: API_CLIENT_ID" && exit 1
          fi
          if [ "${{ secrets.API_CLIENT_SECRET }}" == '' ]; then
            echo "Missing secret: API_CLIENT_SECRET" && exit 1
          fi
          if [ "${{ secrets.APPLICATION_ADMIN_CLIENT_ID }}" == '' ]; then
            echo "Missing secret: APPLICATION_ADMIN_CLIENT_ID" && exit 1
          fi
          if [ "${{ secrets.APPLICATION_ADMIN_CLIENT_SECRET }}" == '' ]; then
            echo "Missing secret: APPLICATION_ADMIN_CLIENT_SECRET" && exit 1
          fi
          if [ "${{ secrets.MGMT_RESOURCE_GROUP_NAME }}" == '' ]; then
            echo "Missing secret: MGMT_RESOURCE_GROUP_NAME" && exit 1
          fi
          if [ "${{ secrets.MGMT_STORAGE_ACCOUNT_NAME }}" == '' ]; then
            echo "Missing secret: MGMT_STORAGE_ACCOUNT_NAME" && exit 1
          fi
          if [ "${{ secrets.SWAGGER_UI_CLIENT_ID }}" == '' ]; then
            echo "Missing secret: SWAGGER_UI_CLIENT_ID" && exit 1
          fi
          if [ "${{ secrets.TEST_APP_ID }}" == '' ]; then
            echo "Missing secret: TEST_APP_ID" && exit 1
          fi
          if [ "${{ secrets.TEST_WORKSPACE_APP_ID }}" == '' ]; then
            echo "Missing secret: TEST_WORKSPACE_APP_ID" && exit 1
          fi
          if [ "${{ secrets.TEST_WORKSPACE_APP_SECRET }}" == '' ]; then
            echo "Missing secret: TEST_WORKSPACE_APP_SECRET" && exit 1
          fi
          if [ "${{ secrets.TEST_ACCOUNT_CLIENT_ID }}" == '' ]; then
            echo "Missing secret: TEST_ACCOUNT_CLIENT_ID" && exit 1
          fi
          if [ "${{ secrets.TEST_ACCOUNT_CLIENT_SECRET }}" == '' ]; then
            echo "Missing secret: TEST_ACCOUNT_CLIENT_SECRET" && exit 1
          fi
          if [ "${{ secrets.TRE_ID }}" == '' ]; then
            echo "Missing secret: TRE_ID" && exit 1
          fi
          if [ "${{ secrets.AZURE_CREDENTIALS }}" == '' ]; then
            echo "Missing secret: AZURE_CREDENTIALS" && exit 1
          fi
          if [ "${{ inputs.DEVCONTAINER_TAG }}" == '' ]; then
            echo "Missing input: DEVCONTAINER_TAG" && exit 1
          fi
          if [ "${{ vars.LOCATION }}" == '' ]; then
            echo "Missing variable: LOCATION" && exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          # if the following values are missing (i.e. not triggered via comment workflow)
          # then the default checkout will apply
          ref: ${{ inputs.prRef }}

      - name: Set up Docker BuildKit
        uses: docker/setup-buildx-action@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          environment: ${{ (vars.AZURE_ENVIRONMENT != '' && vars.AZURE_ENVIRONMENT) || 'AzureCloud' }}

      - name: ACR Login
        id: ci_cache_cr_login
        # will fail if this is a new env which is expected
        continue-on-error: true
        run: az acr login --name "${{ secrets.CI_CACHE_ACR_NAME }}"

      - name: Build new devcontainer
        env:
          DOCKER_BUILDKIT: 1
        run: |
          set -e

          USER_UID=$(id -u)
          USER_GID=$(id -g)
          acr_domain_suffix=$(az cloud show --query suffixes.acrLoginServerEndpoint --output tsv)
          CI_CACHE_ACR_URI=${{ secrets.CI_CACHE_ACR_NAME }}${acr_domain_suffix}
          echo "CI_CACHE_ACR_URI=$CI_CACHE_ACR_URI" >> "$GITHUB_ENV"

          docker_cache=()
          if [ "${{ steps.ci_cache_cr_login.outcome }}" = "success" ]; then
            docker_cache+=(--cache-from "$CI_CACHE_ACR_URI/tredev:${{ inputs.DEVCONTAINER_TAG }}")
            docker_cache+=(--cache-from "$CI_CACHE_ACR_URI/tredev:latest")
          fi

          docker build . "${docker_cache[@]}" \
            -t "tredev:${{ inputs.DEVCONTAINER_TAG }}" -f ".devcontainer/Dockerfile" \
            --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg USER_UID="${USER_UID}" --build-arg USER_GID="${USER_GID}"

          docker image tag tredev:"${{ inputs.DEVCONTAINER_TAG }}" \
            "$CI_CACHE_ACR_URI/tredev:${{ inputs.DEVCONTAINER_TAG }}"

      - name: Deploy management
        uses: ./.github/actions/devcontainer_run_command
        with:
          COMMAND: "make bootstrap mgmt-deploy"
          DEVCONTAINER_TAG: ${{ inputs.DEVCONTAINER_TAG }}
          CI_CACHE_ACR_NAME: ${{ secrets.CI_CACHE_ACR_NAME}}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          AZURE_ENVIRONMENT: ${{ vars.AZURE_ENVIRONMENT }}
          TRE_ID: ${{ secrets.TRE_ID }}
          LOCATION: ${{ vars.LOCATION }}
          ACR_NAME: ${{ secrets.ACR_NAME }}
          TERRAFORM_STATE_CONTAINER_NAME: ${{ vars.TERRAFORM_STATE_CONTAINER_NAME }}
          MGMT_RESOURCE_GROUP_NAME: ${{ secrets.MGMT_RESOURCE_GROUP_NAME }}
          MGMT_STORAGE_ACCOUNT_NAME: ${{ secrets.MGMT_STORAGE_ACCOUNT_NAME }}

      - name: ACR Login
        # failure in the first attempt indicates a new ACR, so we need to try again after it's been created
        if: steps.ci_cache_cr_login.outcome != 'success'
        run: |
          # shellcheck disable=SC2034,SC2015,SC2125
          for i in {1..3}; do
            az acr login --name "${{ secrets.CI_CACHE_ACR_NAME }}" && ec=0 && break || ec=\$? && sleep 10
          done
          # shellcheck disable=SC2242
          (exit \$ec)

      - name: Push cached devcontainer
        run: docker image push ${{ env.CI_CACHE_ACR_URI }}/tredev:${{ inputs.DEVCONTAINER_TAG }}

  publish_bundles:
    name: Publish Bundle
    runs-on: ubuntu-latest
    needs: [deploy_management]
    strategy:
      matrix:
        include:
          - { BUNDLE_TYPE: "${{ inputs.bundleType }}", BUNDLE_DIR: "${{ inputs.bundleDir }}" }
    environment: ${{ inputs.environmentName }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          # if the following values are missing (i.e. not triggered via comment workflow)
          # then the default checkout will apply
          ref: ${{ inputs.prRef }}
      - name: Publish ${{ matrix.BUNDLE_TYPE }} bundle
        uses: ./.github/actions/devcontainer_run_command
        with:
          # Although porter publish will build automatically, our makefile build target includes logic that should run
          COMMAND: >-
            for i in {1..3}; do make bundle-build bundle-publish DIR=${{ matrix.BUNDLE_DIR }}
            && ec=0 && break || ec=\$? && sleep 30; done; (exit \$ec)
          DEVCONTAINER_TAG: ${{ inputs.DEVCONTAINER_TAG }}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          AZURE_ENVIRONMENT: ${{ vars.AZURE_ENVIRONMENT }}
          CI_CACHE_ACR_NAME: ${{ secrets.CI_CACHE_ACR_NAME}}
          ACR_NAME: ${{ secrets.ACR_NAME }}

  register_bundles:
    name: Register Bundle
    runs-on: ubuntu-latest
    # user resource bundles need to wait for their parent resource to be registered.
    needs: [publish_bundles]
    strategy:
      matrix:
        include:
          - {
              BUNDLE_TYPE: "${{ inputs.bundleType }}",
              BUNDLE_DIR: "${{ inputs.bundleDir }}",
              WORKSPACE_SERVICE_NAME: "${{ inputs.workspaceName }}",
            }
    environment: ${{ inputs.environmentName }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          # if the following values are missing (i.e. not triggered via comment workflow)
          # then the default checkout will apply
          ref: ${{ inputs.prRef }}
      - name: Register ${{ matrix.BUNDLE_TYPE }} bundle
        uses: ./.github/actions/devcontainer_run_command
        with:
          COMMAND: >-
            for i in {1..3}; do make bundle-register DIR=${{ matrix.BUNDLE_DIR }}
            && ec=0 && break || ec=\$? && sleep 10; done; (exit \$ec)
          DEVCONTAINER_TAG: ${{ inputs.DEVCONTAINER_TAG }}
          CI_CACHE_ACR_NAME: ${{ secrets.CI_CACHE_ACR_NAME}}
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          AZURE_ENVIRONMENT: ${{ vars.AZURE_ENVIRONMENT }}
          ACR_NAME: ${{ secrets.ACR_NAME }}
          API_CLIENT_ID: "${{ secrets.API_CLIENT_ID }}"
          AAD_TENANT_ID: "${{ secrets.AAD_TENANT_ID }}"
          TEST_APP_ID: "${{ secrets.TEST_APP_ID }}"
          TEST_ACCOUNT_CLIENT_ID: "${{ secrets.TEST_ACCOUNT_CLIENT_ID }}"
          TEST_ACCOUNT_CLIENT_SECRET: "${{ secrets.TEST_ACCOUNT_CLIENT_SECRET }}"
          TRE_ID: ${{ secrets.TRE_ID }}
          LOCATION: ${{ vars.LOCATION }}
          BUNDLE_TYPE: ${{ matrix.BUNDLE_TYPE }}
          WORKSPACE_SERVICE_NAME: ${{ matrix.WORKSPACE_SERVICE_NAME }}
